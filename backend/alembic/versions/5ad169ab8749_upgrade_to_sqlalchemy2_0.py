"""Upgrade to Sqlalchemy2.0

Revision ID: 5ad169ab8749
Revises: 489ef0771cbe
Create Date: 2023-05-16 20:55:41.563297

"""
# spell-checker: disable
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "5ad169ab8749"
down_revision = "489ef0771cbe"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "operator", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "operator", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "project",
        "pics",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "project", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "project", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "testcaseexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.execute(
        "UPDATE testcaseexecution SET errors = ARRAY[]::VARCHAR[] WHERE errors is null"
    )
    op.alter_column(
        "testcaseexecution",
        "errors",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "testcasemetadata",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "testrunconfig",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "testrunexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.execute(
        "UPDATE teststepexecution SET errors = ARRAY[]::VARCHAR[] WHERE errors is null"
    )
    op.alter_column(
        "teststepexecution",
        "errors",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )

    op.execute(
        "UPDATE teststepexecution SET failures = ARRAY[]::VARCHAR[] "
        "WHERE failures is null"
    )

    op.alter_column(
        "teststepexecution",
        "failures",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "teststepexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "testsuiteexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.execute(
        "UPDATE testsuiteexecution SET errors = ARRAY[]::VARCHAR[] WHERE errors is null"
    )
    op.alter_column(
        "testsuiteexecution",
        "errors",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.alter_column(
        "testsuitemetadata",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "testsuitemetadata",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "testsuiteexecution",
        "errors",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "testsuiteexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "teststepexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "teststepexecution",
        "failures",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "teststepexecution",
        "errors",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "testrunexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "testrunconfig",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "testcasemetadata",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "testcaseexecution",
        "errors",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "testcaseexecution",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "project", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "project", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "project",
        "pics",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.alter_column(
        "operator", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "operator", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    # ### end Alembic commands ###
